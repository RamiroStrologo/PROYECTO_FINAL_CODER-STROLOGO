paths:
  /api/cart/newCart:
    post:
      summary: Crea un carrito.
      tags:
        - Carts
      responses:
        '200':
          description: Carrito creado con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
  /api/cart/{cid}:
    get:
      summary: Obtiene los productos de un carrito.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: 'id del carrito que se desea buscar'
          schema:
            $type: String
      responses:
        '200':
          description: Carrito encontrado con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        '404':
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
  /api/cart/addProdToCart/{cId}/{pId}:
    put:
      summary: Agrega productos a un carrito.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: 'id del carrito que se desea buscar'
          schema:
            $type: String
            parameters:
        - name: pId
          in: path
          required: true
          description: 'id del productos que se desea agregar'
          schema:
            $type: String
      responses:
        '201':
          description: Producto agregado con éxito al carrito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        '400':
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
  /api/cart/{cid}/products/{pid}:
    delete:
      summary: Elimina un productos de un carrito.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: 'id del carrito que se desea buscar'
          schema:
            $type: String
            parameters:
        - name: pId
          in: path
          required: true
          description: 'id del productos que se desea agregar'
          schema:
            $type: String
      responses:
        '200':
          description: Producto eliminado con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        '404':
          description: Carrito no encontrado o producto inexistente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
/api/cart/delAll/{cid}:
  put:
    summary: Elimina todos los productos de un carrito.
    tags:
      - Carts
    parameters:
      - name: cid
        in: path
        required: true
        description: 'id del carrito que se desea buscar'
        schema:
          $type: String
    responses:
      '200':
        description: Productos eliminados.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#components/schemas/Cart'
      '500':
        description: Error al eliminar los productos.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#components/schemas/Cart'
components:
  schemas:
    Cart:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'

    ProductRef:
      type: object
      properties:
        product:
          type: string
          description: The ID of the product
          example: '60d21b4667d0d8992e610c85'
